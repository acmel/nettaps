// tcp_hdr tapset
// Copyright (C) 2007, Red Hat Inc.
// Arnaldo Carvalho de Melo <acme@redhat.com>
//
// This file is free software.  You can redistribute it and/or modify it under
// the terms of the GNU General Public License (GPL), version 2.

%{
#include <linux/in.h>
#include <linux/tcp.h>
#include <linux/skbuff.h>

#if LINUX_VERSION_CODE <= KERNEL_VERSION(2,6,21)
static inline struct tcphdr *tcp_hdr(struct sk_buff *skb)
{
	return (struct tcphdr *)skb->h.raw;
}
#else
static inline unsigned char *skb_transport_header(const struct sk_buff *skb)
{
	return skb->head + skb->transport_header;
}

static inline struct tcphdr *tcp_hdr(struct sk_buff *skb)
{
	return (struct tcphdr *)skb_transport_header(skb);
}
#endif
%}

function skb_tcphdr_sport:long (skb:long)
%{
	struct tcphdr *tp = tcp_hdr((struct sk_buff *)THIS->skb);

	THIS->__retvalue = kread(&(tp->source));
	CATCH_DEREF_FAULT();
%}

function skb_tcphdr_dport:long (skb:long)
%{
	struct tcphdr *tp = tcp_hdr((struct sk_buff *)THIS->skb);

	THIS->__retvalue = kread(&(tp->dest));
	CATCH_DEREF_FAULT();
%}

function skb_iphdr_tcp_sport:long (skb:long)
%{
	struct iphdr *iph = ip_hdr((struct sk_buff *)THIS->skb);
	struct tcphdr *th = (void *)iph + iph->ihl * 4;

	THIS->__retvalue = ntohs(kread(&(th->source)));
	CATCH_DEREF_FAULT();
%}

function skb_iphdr_tcp_dport:long (skb:long)
%{
	struct iphdr *iph = ip_hdr((struct sk_buff *)THIS->skb);
	struct tcphdr *th = (void *)iph + iph->ihl * 4;

	THIS->__retvalue = ntohs(kread(&(th->dest)));
	CATCH_DEREF_FAULT();
%}
